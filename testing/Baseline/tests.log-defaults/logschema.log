### BTest baseline data generated by btest-diff. Do not edit. Use "btest -U/-u" to update. Requires BTest >= 0.63.
{"log":"logschema","field":"log","_type":"string","record_type":"Log::Schema::Log::Field","is_optional":false,"docstring":"Name of the log, e.g. \"conn\"","script":"logschema/export/log.zeek"}
{"log":"logschema","field":"field","_type":"string","record_type":"Log::Schema::Log::Field","is_optional":false,"docstring":"Name of the field, e.g \"uid\"","script":"logschema/export/log.zeek"}
{"log":"logschema","field":"_type","_type":"string","record_type":"Log::Schema::Log::Field","is_optional":false,"docstring":"Zeek type of the field (e.g. \"string\", \"addr\", \"bool\")","script":"logschema/export/log.zeek"}
{"log":"logschema","field":"record_type","_type":"string","record_type":"Log::Schema::Log::Field","is_optional":false,"docstring":"Record type containing this field (e.g. \"Conn::Info\", \"conn_id\").","script":"logschema/export/log.zeek"}
{"log":"logschema","field":"is_optional","_type":"bool","record_type":"Log::Schema::Log::Field","is_optional":true,"docstring":"Whether the field is optional.","script":"logschema/export/log.zeek"}
{"log":"logschema","field":"_default","_type":"string","record_type":"Log::Schema::Log::Field","is_optional":true,"docstring":"Default value of the field, if defined. Stringified since \"any\" and logging do not get along.","script":"logschema/export/log.zeek"}
{"log":"logschema","field":"docstring","_type":"string","record_type":"Log::Schema::Log::Field","is_optional":true,"docstring":"If available, the docstring for the field.","script":"logschema/export/log.zeek"}
{"log":"logschema","field":"script","_type":"string","record_type":"Log::Schema::Log::Field","is_optional":true,"docstring":"Script that defines the field, relative to the scripts folder (e.g. \"base/init-bare.zeek\").","script":"logschema/export/log.zeek"}
{"log":"logschema","field":"package","_type":"string","record_type":"Log::Schema::Log::Field","is_optional":true,"docstring":"If part of a Zeek package, the package's name sans owner (\"hello-world\", not \"zeek/hello-world\").","script":"logschema/export/log.zeek"}
{"log":"test","field":"a","_type":"addr","record_type":"Testlog::Info","is_optional":false,"docstring":"An address. Also a comment with \"quotation marks\",\nto verify escaping.","script":"testlog.zeek"}
{"log":"test","field":"b","_type":"bool","record_type":"Testlog::Info","is_optional":false,"docstring":"A boolean.","script":"testlog.zeek"}
{"log":"test","field":"c","_type":"count","record_type":"Testlog::Info","is_optional":false,"docstring":"A count.","script":"testlog.zeek"}
{"log":"test","field":"d","_type":"double","record_type":"Testlog::Info","is_optional":false,"docstring":"A double.","script":"testlog.zeek"}
{"log":"test","field":"e","_type":"enum transport_proto","record_type":"Testlog::Info","is_optional":false,"docstring":"An enum.","script":"testlog.zeek"}
{"log":"test","field":"i","_type":"int","record_type":"Testlog::Info","is_optional":false,"docstring":"An integer.","script":"testlog.zeek"}
{"log":"test","field":"ival","_type":"interval","record_type":"Testlog::Info","is_optional":false,"docstring":"An interval.","script":"testlog.zeek"}
{"log":"test","field":"p","_type":"port","record_type":"Testlog::Info","is_optional":false,"docstring":"A port.","script":"testlog.zeek"}
{"log":"test","field":"r.orig_h","_type":"addr","record_type":"conn_id","is_optional":false,"docstring":"The originator's IP address.","script":"base/init-bare.zeek"}
{"log":"test","field":"r.orig_p","_type":"port","record_type":"conn_id","is_optional":false,"docstring":"The originator's port number.","script":"base/init-bare.zeek"}
{"log":"test","field":"r.resp_h","_type":"addr","record_type":"conn_id","is_optional":false,"docstring":"The responder's IP address.","script":"base/init-bare.zeek"}
{"log":"test","field":"r.resp_p","_type":"port","record_type":"conn_id","is_optional":false,"docstring":"The responder's port number.","script":"base/init-bare.zeek"}
{"log":"test","field":"st","_type":"set[count]","record_type":"Testlog::Info","is_optional":false,"docstring":"A set.","script":"testlog.zeek"}
{"log":"test","field":"s","_type":"string","record_type":"Testlog::Info","is_optional":false,"docstring":"A string.","script":"testlog.zeek"}
{"log":"test","field":"sub","_type":"subnet","record_type":"Testlog::Info","is_optional":false,"docstring":"A subnet.","script":"testlog.zeek"}
{"log":"test","field":"t","_type":"time","record_type":"Testlog::Info","is_optional":false,"docstring":"A timestamp.","script":"testlog.zeek"}
{"log":"test","field":"v","_type":"vector of count","record_type":"Testlog::Info","is_optional":false,"docstring":"A vector.","script":"testlog.zeek"}
{"log":"test","field":"sd","_type":"string","record_type":"Testlog::Info","is_optional":true,"_default":"yes","docstring":"A default value.","script":"testlog.zeek"}
{"log":"test","field":"so","_type":"string","record_type":"Testlog::Info","is_optional":true,"docstring":"An optional value.","script":"testlog.zeek"}
{"log":"test","field":"aa_plaincomment","_type":"string","record_type":"Testlog::Info","is_optional":false,"script":"testlog.zeek"}
